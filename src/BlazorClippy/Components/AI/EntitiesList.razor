
<Row Margin="Margin.Is2.FromTop">
    <Column>
        <Row Margin="Margin.Is2.FromTop">
            <Column>
                <Span>Entities:</Span>
            </Column>
        </Row>
        @foreach (var entity in Item.Entities)
        {
            var iscaptured = Item.FoundEntities.ContainsKey($"{entity.Entity}:{entity.Value}");
            <EntityItemSmall Entity="@entity" IsCaptured="@iscaptured" OnRemoveEntity="@OnRemoveEntityHandler" />
        }
    </Column>
</Row>

@code {
    [Parameter]
    public AnalyzedObjectDataItem Item { get; set; } = new AnalyzedObjectDataItem();
    [Parameter]
    public EventCallback<AnalyzedObjectDataItem> ItemChanged { get; set; }

    private void OnDataItemRefreshedHandler(string id)
    {
        ItemChanged.InvokeAsync(Item);
        StateHasChanged();
    }

    private void OnRemoveEntityHandler(RuntimeEntity entity)
    {
        Item.Entities.Remove(entity);
        ItemChanged.InvokeAsync(Item);
        StateHasChanged();
    }
}
